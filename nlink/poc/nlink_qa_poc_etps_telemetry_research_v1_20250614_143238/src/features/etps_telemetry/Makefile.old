# =============================================================================
# Sinphasé Feature Makefile: ETPS Telemetry System
# TDD Integration with Existing Implementation
# =============================================================================

CC = gcc
CFLAGS = -Wall -Wextra -std=c99 -g -I../../../include
TEST_CFLAGS = $(CFLAGS) -DTESTING
LDFLAGS = -L../../../lib -lnlink

# Feature configuration
FEATURE_NAME = etps_telemetry
FEATURE_LIB = lib$(FEATURE_NAME).a

# Source files (link to existing implementation)
EXISTING_SRC = ../../etps/telemetry.c
EXISTING_OBJ = telemetry.o

# Test files
TEST_SRC = ../../../test/unit/$(FEATURE_NAME)/test_$(FEATURE_NAME).c
TEST_EXEC = test_$(FEATURE_NAME)

# Build targets
.PHONY: all test clean red green refactor qa validate

# =============================================================================
# TDD Workflow Targets
# =============================================================================

# TDD RED phase - run tests against existing implementation
red:
	@echo "🔴 TDD RED Phase: Testing existing ETPS implementation"
	@echo "Compiling test suite..."
	$(CC) $(TEST_CFLAGS) $(TEST_SRC) -o $(TEST_EXEC)_red $(LDFLAGS)
	@echo "Running tests..."
	./$(TEST_EXEC)_red

# TDD GREEN phase - validate existing implementation passes tests
green:
	@echo "🟢 TDD GREEN Phase: Validating existing implementation"
	@echo "Linking existing implementation..."
	$(CC) -c $(EXISTING_SRC) -o $(EXISTING_OBJ) $(CFLAGS)
	@echo "Compiling integrated test suite..."
	$(CC) $(TEST_CFLAGS) $(TEST_SRC) $(EXISTING_OBJ) -o $(TEST_EXEC)_green $(LDFLAGS)
	@echo "Running validation tests..."
	./$(TEST_EXEC)_green

# TDD REFACTOR phase - analyze and optimize existing code
refactor: green
	@echo "🔄 TDD REFACTOR Phase: Code analysis and optimization"
	@echo "Analyzing existing implementation..."
	@echo "  - Static analysis: TODO"
	@echo "  - Performance profiling: TODO"
	@echo "  - Code coverage analysis: TODO"
	@echo "Refactoring validation complete"

# =============================================================================
# QA and Validation Targets
# =============================================================================

# Quality assurance validation
qa:
	@echo "🔍 QA Validation for ETPS Telemetry"
	@echo "=================================="
	@echo "Static Analysis:"
	@echo "  - Checking for unused variables..."
	@$(CC) $(CFLAGS) -Wunused-variable -c $(EXISTING_SRC) -o /tmp/qa_check1.o 2>&1 | head -10 || true
	@echo "  - Checking for potential memory leaks..."
	@$(CC) $(CFLAGS) -fsanitize=address -c $(EXISTING_SRC) -o /tmp/qa_check2.o 2>&1 | head -5 || true
	@echo "Dynamic Analysis:"
	@echo "  - TODO: Valgrind integration"
	@echo "  - TODO: Performance benchmarking"
	@echo "Code Coverage:"
	@echo "  - TODO: gcov integration"
	@rm -f /tmp/qa_check*.o

# Comprehensive validation
validate: red green refactor qa
	@echo "✅ ETPS Telemetry validation complete"
	@echo "All phases executed successfully"

# Default target
all: validate

# Cleanup
clean:
	rm -f *.o *.a $(TEST_EXEC)_* core /tmp/qa_check*.o

# Help
help:
	@echo "Sinphasé ETPS Telemetry Makefile"
	@echo "================================"
	@echo "TDD Workflow:"
	@echo "  red      - Run failing tests (TDD RED phase)"
	@echo "  green    - Validate implementation (TDD GREEN phase)" 
	@echo "  refactor - Code optimization (TDD REFACTOR phase)"
	@echo ""
	@echo "Quality Assurance:"
	@echo "  qa       - Run static and dynamic analysis"
	@echo "  validate - Complete validation workflow"
	@echo ""
	@echo "Utility:"
	@echo "  clean    - Remove build artifacts"
	@echo "  help     - Show this help"
